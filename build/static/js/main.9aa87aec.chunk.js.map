{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","index","ExpensesChart","chartDataPoints","expenses","getMonth","ExpensesFilter","selected","onChange","event","onChangeFilter","target","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onExpenseAdd","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9aa87aec.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = props => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ExpenseDate;","\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n    const classes = `card ${props.className}`; \r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = props => {\r\n    return ( \r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date}></ExpenseDate>\r\n                <div className='expense-item__description'>\r\n                    <h2>{props.title}</h2>\r\n                    <div className='expense-item__price'>â‚¹{props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n     );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css'\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = props => {\r\n\r\n  if(props.items.length === 0) {\r\n      return (\r\n        <h2 className='expenses-list__fallback'>No expenses found!!</h2>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n        {\r\n            props.items.map(expense => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))\r\n        }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = props => {\r\n  const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint, index) => (\r\n        <ChartBar\r\n          key={index}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    \r\n    return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import { useState } from \"react\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = event => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = event => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = event => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submiHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submiHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" value={enteredDate} onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel} >Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = props => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = { ...enteredExpenseData, id: Math.random().toString() };\r\n    props.onExpenseAdd(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button type=\"button\" onClick={startEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Chairs\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: \"e2\", \n    title: \"TV\", \n    amount: 799.49, \n    date: new Date(2022, 2, 12) \n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    // setExpenses([expense, ...expenses]); wrong way, use prev state fn for value update\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onExpenseAdd = {addExpenseHandler}/>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}